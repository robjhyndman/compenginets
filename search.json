[{"path":"/articles/compenginets.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to the compenginets package","text":"compenginets currently isn’t CRAN. can install development version Github","code":"# install.packages(\"devtools\") devtools::install_github(\"robjhyndman/compenginets\")"},{"path":"/articles/compenginets.html","id":"compengine-a-self-organizing-database-of-time-series-data","dir":"Articles","previous_headings":"","what":"CompEngine: A self-organizing database of time-series data","title":"Introduction to the compenginets package","text":"CompEngine online time-series database allow users upload interactively compare data similar time series data set. website build Nick Jones Ben Fulcher, based early work conducted Ben D. Fulcher, Max . Little, Nick S. Jones (2013). provide time series similar data user uploads, compute features data, find existing time series matching features. features list detailed description can found page CompEngine.","code":""},{"path":"/articles/compenginets.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to the compenginets package","text":"package intends provide means access data CompEngine ease R solution. Function get_cets can used return time series specified name within certain category. default, get_cets returns first 10 pages (maximum 10 one page) time series within category matches argument key. list category can obtained externally.","code":"library(compenginets)  # Get series within Finance category (including subcategory) cets_finance <- get_cets(\"finance\") length(cets_finance) #> [1] 100 str(cets_finance[[1]]) #>  Time-Series [1:4197] from 1 to 4197: 6890 6783 6553 6453 6508 ... #>  - attr(*, \"name\")= chr \"M4_D3333_Finance_1\" #>  - attr(*, \"description\")= chr \"\" #>  - attr(*, \"samplingInformation.name\")= chr \"M4_D3333_Finance_1\" #>  - attr(*, \"samplingInformation.description\")= chr \"\" #>  - attr(*, \"samplingInformation.samplingInformation\")='data.frame':  1 obs. of  2 variables: #>   ..$ samplingRate: chr \"1.00\" #>   ..$ samplingUnit: chr \"/day\" #>  - attr(*, \"tags\")= chr [1:3] \"finance\" \"M4\" \"Daily\" #>  - attr(*, \"category.name\")= chr \"Finance\" #>  - attr(*, \"category.uri\")= chr \"real/finance/\" #>  - attr(*, \"sfi.name\")= chr [1:22] \"DN_HistogramMode_5\" \"DN_HistogramMode_10\" \"CO_Embed2_Dist_tau_d_expfit_meandiff\" \"CO_f1ecac\" ... #>  - attr(*, \"sfi.prettyName\")= chr [1:22] \"DN_HistogramMode_5\" \"DN_HistogramMode_10\" \"CO_Embed2_Dist_tau_d_expfit_meandiff\" \"CO_f1ecac\" ... #>  - attr(*, \"sfi.value\")= num [1:22] 36 56.9 72.9 56.8 50.1 ... #>  - attr(*, \"source\")= chr NA  # Supply the numer of pages need with option maxpage # A maximum of 10 time series are in one page cets_finance_20 <- get_cets(\"finance\", maxpage = 2) length(cets_finance_20) #> [1] 20  # Switch category to FALSE to get the time series matching a name W138_finance_m4 <- get_cets(\"M4_W138_Finance_1\", category = FALSE) str(W138_finance_m4) #>  Time-Series [1:1044] from 1 to 1044: 2062 2086 2026 2076 2077 ... #>  - attr(*, \"name\")= chr \"M4_W138_Finance_1\" #>  - attr(*, \"description\")= chr \"\" #>  - attr(*, \"samplingInformation.samplingRate\")= chr \"1.00\" #>  - attr(*, \"samplingInformation.samplingUnit\")= chr \"/week\" #>  - attr(*, \"tags\")= chr [1:3] \"finance\" \"M4\" \"weekly\" #>  - attr(*, \"category.name\")= chr \"Finance\" #>  - attr(*, \"category.uri\")= chr \"real/finance/\" #>  - attr(*, \"sfi.name\")= chr [1:22] \"DN_HistogramMode_5\" \"DN_HistogramMode_10\" \"CO_Embed2_Dist_tau_d_expfit_meandiff\" \"CO_f1ecac\" ... #>  - attr(*, \"sfi.prettyName\")= chr [1:22] \"DN_HistogramMode_5\" \"DN_HistogramMode_10\" \"CO_Embed2_Dist_tau_d_expfit_meandiff\" \"CO_f1ecac\" ... #>  - attr(*, \"sfi.value\")= num [1:22] 84 86.8 65.2 14.1 23.8 ... #>  - attr(*, \"source\")= logi NA cate_path <- category_scraping() str(cate_path, list.len = 10) #> List of 195 #>  $ real                                     : chr [1:55] \"real\" \"audio\" \"ecology\" \"economics\" ... #>  $ synthetic                                : chr [1:139] \"synthetic\" \"flow\" \"iterative map\" \"periodic\" ... #>  $ unassigned                               : chr \"unassigned\" #>  $ audio                                    : chr [1:7] \"audio\" \"animal sounds\" \"human speech\" \"music\" ... #>  $ ecology                                  : chr [1:2] \"ecology\" \"zooplankton growth\" #>  $ economics                                : chr \"economics\" #>  $ finance                                  : chr [1:8] \"finance\" \"crude oil prices\" \"exchange rate\" \"gas prices\" ... #>  $ industry                                 : chr \"industry\" #>  $ medical                                  : chr [1:10] \"medical\" \"boc\" \"chest volume\" \"ecg\" ... #>  $ meteorology                              : chr [1:14] \"meteorology\" \"air pressure\" \"air temperature\" \"carbon dioxide\" ... #>   [list output truncated]"},{"path":"/articles/compenginets.html","id":"sources","dir":"Articles","previous_headings":"","what":"Sources","title":"Introduction to the compenginets package","text":"B.D. Fulcher, M.. Little, N.S. Jones. Highly comparative time-series analysis: empirical structure time series methods. J. Roy. Soc. Interface 10, 20130048, 2013","code":""},{"path":"/articles/compenginets.html","id":"license","dir":"Articles","previous_headings":"","what":"License","title":"Introduction to the compenginets package","text":"package free open source software, licensed CC0","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Hyndman. Author, maintainer. Yangzhuoran Yang. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hyndman R, Yang Y (2023). compenginets: Time series http://www.comp-engine.org/timeseries/. https://pkg.robjhyndman.com/compenginets, https://github.com/robjhyndman/compenginets.","code":"@Manual{,   title = {compenginets: Time series from http://www.comp-engine.org/timeseries/},   author = {Rob Hyndman and Yangzhuoran Yang},   year = {2023},   note = {https://pkg.robjhyndman.com/compenginets, https://github.com/robjhyndman/compenginets}, }"},{"path":"/index.html","id":"compenginets-data-from-compengine","dir":"","previous_headings":"","what":"Time series from http://www.comp-engine.org/timeseries/","title":"Time series from http://www.comp-engine.org/timeseries/","text":"goal compenginets provide time series http://www.comp-engine.org/.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Time series from http://www.comp-engine.org/timeseries/","text":"compenginets currently isn’t CRAN. can install development version Github","code":"# install.packages(\"devtools\") devtools::install_github(\"robjhyndman/compenginets\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Time series from http://www.comp-engine.org/timeseries/","text":"","code":"library(compenginets) # cets_finance <- get_cets(\"finance\") W138_finance_m4 <- get_cets(\"M4_W138_Finance_1\", category = FALSE) str(W138_finance_m4) #>  Time-Series [1:1044] from 1 to 1044: 2062 2086 2026 2076 2077 ... #>  - attr(*, \"name\")= chr \"M4_W138_Finance_1\" #>  - attr(*, \"description\")= chr \"\" #>  - attr(*, \"samplingInformation.samplingRate\")= chr \"1.00\" #>  - attr(*, \"samplingInformation.samplingUnit\")= chr \"/week\" #>  - attr(*, \"tags\")= chr [1:3] \"finance\" \"M4\" \"weekly\" #>  - attr(*, \"category.name\")= chr \"Finance\" #>  - attr(*, \"category.uri\")= chr \"real/finance/\" #>  - attr(*, \"sfi.name\")= chr [1:16] \"CO_Embed2_Basic_tau.incircle_1\" \"CO_Embed2_Basic_tau.incircle_2\" \"FC_LocalSimple_mean1.taures\" \"DN_HistogramMode_10\" ... #>  - attr(*, \"sfi.prettyName\")= chr [1:16] \"Autocorrelation measure\" \"Autocorrelation measure\" \"Predictability measure\" \"Distribution measure\" ... #>  - attr(*, \"sfi.value\")= num [1:16] 58.907 0.207 11.641 83.933 18.947 ... #>  - attr(*, \"source\")= logi NA"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Time series from http://www.comp-engine.org/timeseries/","text":"package free open source software, licensed CC0","code":""},{"path":"/reference/category_scraping.html","id":null,"dir":"Reference","previous_headings":"","what":"Download category information — category_scraping","title":"Download category information — category_scraping","text":"Download category information","code":""},{"path":"/reference/category_scraping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download category information — category_scraping","text":"","code":"category_scraping()"},{"path":"/reference/category_scraping.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download category information — category_scraping","text":"Yangzhuoran Yang","code":""},{"path":"/reference/category_scraping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download category information — category_scraping","text":"","code":"cate_path <- category_scraping()"},{"path":"/reference/compenginets-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from CompEngine — compenginets-package","title":"Data from CompEngine — compenginets-package","text":"time series CompEngine, self-organizing database time series data.","code":""},{"path":"/reference/compenginets-package.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from CompEngine — compenginets-package","text":"https://www.comp-engine.org/.","code":""},{"path":"/reference/compenginets-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data from CompEngine — compenginets-package","text":"Rob J Hyndman. Rob.Hyndman@monash.edu Yangzhuoran Yang. Fin.Yang@monash.edu","code":""},{"path":"/reference/get_cets.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracting time series from the CompEngine database — get_cets","title":"Extracting time series from the CompEngine database — get_cets","text":"Return time series specified name list time series specified category.","code":""},{"path":"/reference/get_cets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracting time series from the CompEngine database — get_cets","text":"","code":"get_cets(key, category = TRUE, maxpage = 10)"},{"path":"/reference/get_cets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracting time series from the CompEngine database — get_cets","text":"key name time series name category, depending value category category TRUE, get_cets return time series whose category match keyword belong subcategory matched category. FALSE, function return time series name key. maxpage maximum number pages extract. Due number time series can returned, maximum 10 time series returned per page. default 10 pages (100 time series). argument valid category set TRUE.","code":""},{"path":"/reference/get_cets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracting time series from the CompEngine database — get_cets","text":"list consisting selected series class ts. NOTE: Due large variation properties time series stored CompEngine database, tsp attribute (start time time units, end time frequency) tailor made time series. needed, user can customize tsp attribute based output attribute samplingInformation. attributes listed follow: name name time series description description time series samplingInformation Indicating frequency sampling related information tags tags database category name category hierarchy current category. See also category_scraping. sfi \"special feature identification\" information source source time series tsp Tsp Attribute Time-Series-like Objects. See tsp","code":""},{"path":[]},{"path":"/reference/get_cets.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracting time series from the CompEngine database — get_cets","text":"Yangzhuoran Yang","code":""},{"path":"/reference/get_cets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracting time series from the CompEngine database — get_cets","text":"","code":"# Getting series within Finance category (including subcategory) cets_finance <- get_cets(\"finance\") unique(mapply(attr, cets_finance, MoreArgs = list(which = \"category.name\"))) #> [1] \"Finance\" # Getting series by its name W138_finance_m4 <- get_cets(\"M4_W138_Finance_1\", category = FALSE)"},{"path":"/news/index.html","id":"compenginets-01","dir":"Changelog","previous_headings":"","what":"compenginets 0.1","title":"compenginets 0.1","text":"Initial version package. time series added. Added NEWS.md file track changes package.","code":""}]
